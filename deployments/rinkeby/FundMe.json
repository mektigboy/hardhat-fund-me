{
    "address": "0xd1c1238fED0bbb7Bbf168bC5CF1235cF2a7b170C",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeed",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x78796cebfbdcc7a1fe7e4fc1dcf437b08bfc4eb75a6a8f3f6428cb81cfc382e3",
    "receipt": {
        "to": null,
        "from": "0xa7a0275220A00ae3B360F7cB080069063e886271",
        "contractAddress": "0xd1c1238fED0bbb7Bbf168bC5CF1235cF2a7b170C",
        "transactionIndex": 4,
        "gasUsed": "1008411",
        "logsBloom": "0x
        "blockHash": "0xe527393c2f05d9ea518b01373970827a803db0c8926b8b9622afcc4b3eb5af14",
        "transactionHash": "0x78796cebfbdcc7a1fe7e4fc1dcf437b08bfc4eb75a6a8f3f6428cb81cfc382e3",
        "logs": [],
        "blockNumber": 11111192,
        "cumulativeGasUsed": "6134119",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 3,
    "solcInputHash": "a000dc9b7189fe1d8b4b31a7ca284113",
    "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"mektigboy\",\"details\":\"Implements price feeds as our library.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on ETH/USD.\"}},\"notice\":\"Create a sample funding contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/// @title Funding Contract\\n/// @author mektigboy\\n/// @notice Create a sample funding contract.\\n/// @dev Implements price feeds as our library.\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n    address[] private s_funders; // Should be <private>, changed it to <public> for testing puroposes.\\n    mapping(address => uint256) private s_addressToAmountFunded; // Should be <private>, changed it to <public> for testing puroposes.\\n    AggregatorV3Interface private s_priceFeed; // Should be <private>, changed it to <public> for testing puroposes.\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    /// @notice Funds our contract based on ETH/USD.\\n    function fund() public payable {\\n        require(\\n            msg.value.getConvertionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Did not send enough ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xaac00122bad4ea0e5d617798c3a7e09beaad4a3c5ba14f4eeca2cf05bff22f99\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConvertionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xeb11e0d29cdaaa1f49f45b870e6d38f97402633de79d9ecf264fd0336fadac79\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012663803806200126683398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110df6200018760003960008181610351015281816104e40152818161058a015281816105da01526107d001526110df6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a84565b610306565b6040516100cc9190610aca565b60405180910390f35b3480156100e157600080fd5b506100ea61034f565b005b3480156100f857600080fd5b50610101610579565b60405161010e9190610aca565b60405180910390f35b34801561012357600080fd5b5061012c610586565b6040516101399190610af4565b60405180910390f35b34801561014e57600080fd5b506101576105ae565b6040516101649190610b6e565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105d8565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bb5565b610866565b6040516101c29190610af4565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ad90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c3f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029a9190610c8e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561047f5760008082815481106103f9576103f8610ce4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047790610d13565b9150506103d7565b50600067ffffffffffffffff81111561049b5761049a610d5b565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df92919061097a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161052690610dbb565b60006040518083038185875af1925050503d8060008114610563576040519150601f19603f3d011682016040523d82523d6000602084013e610568565b606091505b505090508061057657600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610696575b5050505050905060005b815181101561076b57600082828151811061070857610707610ce4565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610d13565b9150506106ea565b50600067ffffffffffffffff81111561078757610786610d5b565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600090805190602001906107cb92919061097a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081290610dbb565b60006040518083038185875af1925050503d806000811461084f576040519150601f19603f3d011682016040523d82523d6000602084013e610854565b606091505b505090508061086257600080fd5b5050565b600080828154811061087b5761087a610ce4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b9836108e9565b90506000670de0b6b3a764000085836108d29190610dd0565b6108dc9190610e59565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190610f17565b5050509150506402540be400816109729190610f92565b915050919050565b8280548282559060005260206000209081019282156109f3579160200282015b828111156109f25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099a565b5b509050610a009190610a04565b5090565b5b80821115610a1d576000816000905550600101610a05565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5182610a26565b9050919050565b610a6181610a46565b8114610a6c57600080fd5b50565b600081359050610a7e81610a58565b92915050565b600060208284031215610a9a57610a99610a21565b5b6000610aa884828501610a6f565b91505092915050565b6000819050919050565b610ac481610ab1565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b610aee81610a46565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b6000819050919050565b6000610b34610b2f610b2a84610a26565b610b0f565b610a26565b9050919050565b6000610b4682610b19565b9050919050565b6000610b5882610b3b565b9050919050565b610b6881610b4d565b82525050565b6000602082019050610b836000830184610b5f565b92915050565b610b9281610ab1565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600060208284031215610bcb57610bca610a21565b5b6000610bd984828501610ba0565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676820455448210000000000000000600082015250565b6000610c29601883610be2565b9150610c3482610bf3565b602082019050919050565b60006020820190508181036000830152610c5881610c1c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9982610ab1565b9150610ca483610ab1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cd957610cd8610c5f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1e82610ab1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d5057610d4f610c5f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da5600083610d8a565b9150610db082610d95565b600082019050919050565b6000610dc682610d98565b9150819050919050565b6000610ddb82610ab1565b9150610de683610ab1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1f57610e1e610c5f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6482610ab1565b9150610e6f83610ab1565b925082610e7f57610e7e610e2a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea981610e8a565b8114610eb457600080fd5b50565b600081519050610ec681610ea0565b92915050565b6000819050919050565b610edf81610ecc565b8114610eea57600080fd5b50565b600081519050610efc81610ed6565b92915050565b600081519050610f1181610b89565b92915050565b600080600080600060a08688031215610f3357610f32610a21565b5b6000610f4188828901610eb7565b9550506020610f5288828901610eed565b9450506040610f6388828901610f02565b9350506060610f7488828901610f02565b9250506080610f8588828901610eb7565b9150509295509295909350565b6000610f9d82610ecc565b9150610fa883610ecc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fe757610fe6610c5f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102457611023610c5f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106157611060610c5f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561109e5761109d610c5f565b5b82820290509291505056fea26469706673582212201acf4f95555fa9ca8d75c0151faae8e0d1a45ab221d3e904a9af1c93a60abf1e64736f6c634300080f0033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a84565b610306565b6040516100cc9190610aca565b60405180910390f35b3480156100e157600080fd5b506100ea61034f565b005b3480156100f857600080fd5b50610101610579565b60405161010e9190610aca565b60405180910390f35b34801561012357600080fd5b5061012c610586565b6040516101399190610af4565b60405180910390f35b34801561014e57600080fd5b506101576105ae565b6040516101649190610b6e565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105d8565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bb5565b610866565b6040516101c29190610af4565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ad90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c3f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029a9190610c8e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561047f5760008082815481106103f9576103f8610ce4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047790610d13565b9150506103d7565b50600067ffffffffffffffff81111561049b5761049a610d5b565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df92919061097a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161052690610dbb565b60006040518083038185875af1925050503d8060008114610563576040519150601f19603f3d011682016040523d82523d6000602084013e610568565b606091505b505090508061057657600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610696575b5050505050905060005b815181101561076b57600082828151811061070857610707610ce4565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610d13565b9150506106ea565b50600067ffffffffffffffff81111561078757610786610d5b565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600090805190602001906107cb92919061097a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081290610dbb565b60006040518083038185875af1925050503d806000811461084f576040519150601f19603f3d011682016040523d82523d6000602084013e610854565b606091505b505090508061086257600080fd5b5050565b600080828154811061087b5761087a610ce4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b9836108e9565b90506000670de0b6b3a764000085836108d29190610dd0565b6108dc9190610e59565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190610f17565b5050509150506402540be400816109729190610f92565b915050919050565b8280548282559060005260206000209081019282156109f3579160200282015b828111156109f25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099a565b5b509050610a009190610a04565b5090565b5b80821115610a1d576000816000905550600101610a05565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5182610a26565b9050919050565b610a6181610a46565b8114610a6c57600080fd5b50565b600081359050610a7e81610a58565b92915050565b600060208284031215610a9a57610a99610a21565b5b6000610aa884828501610a6f565b91505092915050565b6000819050919050565b610ac481610ab1565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b610aee81610a46565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b6000819050919050565b6000610b34610b2f610b2a84610a26565b610b0f565b610a26565b9050919050565b6000610b4682610b19565b9050919050565b6000610b5882610b3b565b9050919050565b610b6881610b4d565b82525050565b6000602082019050610b836000830184610b5f565b92915050565b610b9281610ab1565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600060208284031215610bcb57610bca610a21565b5b6000610bd984828501610ba0565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676820455448210000000000000000600082015250565b6000610c29601883610be2565b9150610c3482610bf3565b602082019050919050565b60006020820190508181036000830152610c5881610c1c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9982610ab1565b9150610ca483610ab1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cd957610cd8610c5f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1e82610ab1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d5057610d4f610c5f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da5600083610d8a565b9150610db082610d95565b600082019050919050565b6000610dc682610d98565b9150819050919050565b6000610ddb82610ab1565b9150610de683610ab1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1f57610e1e610c5f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6482610ab1565b9150610e6f83610ab1565b925082610e7f57610e7e610e2a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea981610e8a565b8114610eb457600080fd5b50565b600081519050610ec681610ea0565b92915050565b6000819050919050565b610edf81610ecc565b8114610eea57600080fd5b50565b600081519050610efc81610ed6565b92915050565b600081519050610f1181610b89565b92915050565b600080600080600060a08688031215610f3357610f32610a21565b5b6000610f4188828901610eb7565b9550506020610f5288828901610eed565b9450506040610f6388828901610f02565b9350506060610f7488828901610f02565b9250506080610f8588828901610eb7565b9150509295509295909350565b6000610f9d82610ecc565b9150610fa883610ecc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fe757610fe6610c5f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102457611023610c5f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106157611060610c5f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561109e5761109d610c5f565b5b82820290509291505056fea26469706673582212201acf4f95555fa9ca8d75c0151faae8e0d1a45ab221d3e904a9af1c93a60abf1e64736f6c634300080f0033",
    "devdoc": {
        "author": "mektigboy",
        "details": "Implements price feeds as our library.",
        "kind": "dev",
        "methods": {},
        "title": "Funding Contract",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "Funds our contract based on ETH/USD."
            }
        },
        "notice": "Create a sample funding contract.",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 65,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 69,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 72,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
