{
  "address": "0xAb66Ac9f639ED75CE2749b668609d49FC2430499",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x93b540faaa38ef4dd347ae3ee09726ad20e34acb26791fe5ed46cc05a36afa65",
  "receipt": {
    "to": null,
    "from": "0xa7a0275220A00ae3B360F7cB080069063e886271",
    "contractAddress": "0xAb66Ac9f639ED75CE2749b668609d49FC2430499",
    "transactionIndex": 15,
    "gasUsed": "713714",
    "logsBloom": "0x
    "blockHash": "0xfc6e89fc736028f070d9e16695984395c60577afc9d4ef9817258e2d2d3ae3af",
    "transactionHash": "0x93b540faaa38ef4dd347ae3ee09726ad20e34acb26791fe5ed46cc05a36afa65",
    "logs": [],
    "blockNumber": 11104905,
    "cumulativeGasUsed": "9145152",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "e49a7130ab941f1b017f0292333560c1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"mektigboy\",\"details\":\"Implements price feeds as our library.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on ETH/USD.\"}},\"notice\":\"Create a sample funding contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n/// @title Funding Contract\\n/// @author mektigboy\\n/// @notice Create a sample funding contract.\\n/// @dev Implements price feeds as our library.\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address public immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFounded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    error NotOwner();\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    /// @notice Funds our contract based on ETH/USD.\\n    function fund() public payable {\\n        require(msg.value.getConvertionRate(s_priceFeed) >= MINIMUM_USD, \\\"Did not send enough ETH!\\\");\\n        s_addressToAmountFounded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFounded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success,) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x28debc97d8025e5f257bd6fd3025e293ff5bd3c3ac72ccce2113a698228514f1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConvertionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xeb11e0d29cdaaa1f49f45b870e6d38f97402633de79d9ecf264fd0336fadac79\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610cec380380610cec83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610b8661016660003960008181610210015281816103a301526104470152610b866000f3fe6080604052600436106100435760003560e01c80633ccfd60b1461005c5780636b69a59214610073578063b60d42881461009e578063dba6335f146100a857610052565b36610052576100506100d3565b005b61005a6100d3565b005b34801561006857600080fd5b5061007161020e565b005b34801561007f57600080fd5b50610088610438565b60405161009591906105f6565b60405180910390f35b6100a66100d3565b005b3480156100b457600080fd5b506100bd610445565b6040516100ca9190610652565b60405180910390f35b6802b5e3af16b1880000610112600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461046990919063ffffffff16565b1015610153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014a906106ca565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101a29190610719565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610293576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561033e5760008082815481106102b8576102b761076f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103369061079e565b915050610296565b50600067ffffffffffffffff81111561035a576103596107e6565b5b6040519080825280602002602001820160405280156103885781602001602082028036833780820191505090505b506000908051906020019061039e929190610536565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103e590610846565b60006040518083038185875af1925050503d8060008114610422576040519150601f19603f3d011682016040523d82523d6000602084013e610427565b606091505b505090508061043557600080fd5b50565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610475836104a5565b90506000670de0b6b3a7640000858361048e919061085b565b61049891906108e4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051791906109be565b5050509150506402540be4008161052e9190610a39565b915050919050565b8280548282559060005260206000209081019282156105af579160200282015b828111156105ae5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610556565b5b5090506105bc91906105c0565b5090565b5b808211156105d95760008160009055506001016105c1565b5090565b6000819050919050565b6105f0816105dd565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063c82610611565b9050919050565b61064c81610631565b82525050565b60006020820190506106676000830184610643565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676820455448210000000000000000600082015250565b60006106b460188361066d565b91506106bf8261067e565b602082019050919050565b600060208201905081810360008301526106e3816106a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610724826105dd565b915061072f836105dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610764576107636106ea565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006107a9826105dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107db576107da6106ea565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610830600083610815565b915061083b82610820565b600082019050919050565b600061085182610823565b9150819050919050565b6000610866826105dd565b9150610871836105dd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108aa576108a96106ea565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108ef826105dd565b91506108fa836105dd565b92508261090a576109096108b5565b5b828204905092915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b6109398161091a565b811461094457600080fd5b50565b60008151905061095681610930565b92915050565b6000819050919050565b61096f8161095c565b811461097a57600080fd5b50565b60008151905061098c81610966565b92915050565b61099b816105dd565b81146109a657600080fd5b50565b6000815190506109b881610992565b92915050565b600080600080600060a086880312156109da576109d9610915565b5b60006109e888828901610947565b95505060206109f98882890161097d565b9450506040610a0a888289016109a9565b9350506060610a1b888289016109a9565b9250506080610a2c88828901610947565b9150509295509295909350565b6000610a448261095c565b9150610a4f8361095c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a8e57610a8d6106ea565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610acb57610aca6106ea565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b0857610b076106ea565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b4557610b446106ea565b5b82820290509291505056fea26469706673582212203659c2f4a7e55f0fa1e797f9d9a0aa3ea75b2bc9a046b8c9e254b8bdf95e54da64736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633ccfd60b1461005c5780636b69a59214610073578063b60d42881461009e578063dba6335f146100a857610052565b36610052576100506100d3565b005b61005a6100d3565b005b34801561006857600080fd5b5061007161020e565b005b34801561007f57600080fd5b50610088610438565b60405161009591906105f6565b60405180910390f35b6100a66100d3565b005b3480156100b457600080fd5b506100bd610445565b6040516100ca9190610652565b60405180910390f35b6802b5e3af16b1880000610112600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461046990919063ffffffff16565b1015610153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014a906106ca565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101a29190610719565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610293576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561033e5760008082815481106102b8576102b761076f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103369061079e565b915050610296565b50600067ffffffffffffffff81111561035a576103596107e6565b5b6040519080825280602002602001820160405280156103885781602001602082028036833780820191505090505b506000908051906020019061039e929190610536565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103e590610846565b60006040518083038185875af1925050503d8060008114610422576040519150601f19603f3d011682016040523d82523d6000602084013e610427565b606091505b505090508061043557600080fd5b50565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610475836104a5565b90506000670de0b6b3a7640000858361048e919061085b565b61049891906108e4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051791906109be565b5050509150506402540be4008161052e9190610a39565b915050919050565b8280548282559060005260206000209081019282156105af579160200282015b828111156105ae5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610556565b5b5090506105bc91906105c0565b5090565b5b808211156105d95760008160009055506001016105c1565b5090565b6000819050919050565b6105f0816105dd565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063c82610611565b9050919050565b61064c81610631565b82525050565b60006020820190506106676000830184610643565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676820455448210000000000000000600082015250565b60006106b460188361066d565b91506106bf8261067e565b602082019050919050565b600060208201905081810360008301526106e3816106a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610724826105dd565b915061072f836105dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610764576107636106ea565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006107a9826105dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107db576107da6106ea565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610830600083610815565b915061083b82610820565b600082019050919050565b600061085182610823565b9150819050919050565b6000610866826105dd565b9150610871836105dd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108aa576108a96106ea565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108ef826105dd565b91506108fa836105dd565b92508261090a576109096108b5565b5b828204905092915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b6109398161091a565b811461094457600080fd5b50565b60008151905061095681610930565b92915050565b6000819050919050565b61096f8161095c565b811461097a57600080fd5b50565b60008151905061098c81610966565b92915050565b61099b816105dd565b81146109a657600080fd5b50565b6000815190506109b881610992565b92915050565b600080600080600060a086880312156109da576109d9610915565b5b60006109e888828901610947565b95505060206109f98882890161097d565b9450506040610a0a888289016109a9565b9350506060610a1b888289016109a9565b9250506080610a2c88828901610947565b9150509295509295909350565b6000610a448261095c565b9150610a4f8361095c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a8e57610a8d6106ea565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610acb57610aca6106ea565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b0857610b076106ea565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b4557610b446106ea565b5b82820290509291505056fea26469706673582212203659c2f4a7e55f0fa1e797f9d9a0aa3ea75b2bc9a046b8c9e254b8bdf95e54da64736f6c634300080f0033",
  "devdoc": {
    "author": "mektigboy",
    "details": "Implements price feeds as our library.",
    "kind": "dev",
    "methods": {},
    "title": "Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on ETH/USD."
      }
    },
    "notice": "Create a sample funding contract.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFounded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}